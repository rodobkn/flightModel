name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create virtual env and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements_prod.txt

      - name: Run model-test
        run: |
          source venv/bin/activate
          make model-test

      - name: Run api-test
        run: |
          source venv/bin/activate
          make api-test

      # - name: Run model-test and api-test
      #   id: tests
      #   run: |
      #     source venv/bin/activate
      #     if make model-test && make api-test; then
      #       echo "success" > $HOME/status
      #     else
      #       echo "failure" > $HOME/status
      #     fi

      # - name: Set status check
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       const status = fs.readFileSync(`${process.env.HOME}/status`, 'utf8').trim();
      #       const context = 'Continuous Integration';
      #       github.repos.createStatus({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         sha: context.sha,
      #         state: status,
      #         context: context
      #       });
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}